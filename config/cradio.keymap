// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5

/ {
    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 1>;
            then-layer = <4>;
        };
    };

    combos {
        compatible = "zmk,combos";

        hiragana {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <20 21>;
        };

        eisu {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <28 29>;
        };

        kagikakkoL {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <13 12>;
        };

        kagikakkoR {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <16 17>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W  &kp E           &kp R        &kp T                 &lt 6 Y                 &kp U          &kp I            &kp O    &kp P
&ht LEFT_CONTROL A  &kp S  &ht LEFT_ALT D  &ht LGUI F   &kp G                 &kp H                   &ht RGUI J     &ht RIGHT_ALT K  &kp L    &lt 1 ENTER
&ht LEFT_SHIFT Z    &kp X  &kp C           &kp V        &kp B                 &kp N                   &lt 5 N        &kp COMMA        &kp DOT  &ht RIGHT_SHIFT EXCLAMATION
                                           &lt 1 SPACE  &ht LEFT_GUI MINUS    &ht RIGHT_ALT QUESTION  &kp BACKSPACE
            >;
        };

        left_layer {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3       &kp NUMBER_4     &kp NUMBER_5    &kp AMPERSAND   &kp AT           &kp PLUS   &kp ASTERISK  &kp SEMICOLON
&kp NUMBER_6  &kp NUMBER_7    &kp NUMBER_8       &kp NUMBER_9     &kp NUMBER_0    &kp EQUAL       &kp EXCLAMATION  &kp MINUS  &kp QUESTION  &kp HASH
&kp GRAVE     &kp LEFT_BRACE  &kp DOUBLE_QUOTES  &kp RIGHT_BRACE  &bootloader     &kp UNDERSCORE  &kp SLASH        &kp COLON  &kp PERCENT   &kp QMARK
                                                 &trans           &trans          &trans          &trans
            >;
        };

        right_layer {
            bindings = <
&kp N1   &kp N2    &kp N3     &kp N4   &kp N5     &kp N6    &kp N7     &kp N8     &kp N9     &kp N0
&kp DEL  &kp CAPS  &kp PSCRN  &kp INS  &trans     &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans
&trans   &trans    &trans     &trans   &trans     &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &bootloader
                              &trans   &kp ESC    &trans    &trans
            >;
        };

        windows_layer {
            bindings = <
&kp Q             &kp W  &kp E           &kp R           &kp T         &kp Y      &kp U            &kp I            &kp O    &kp P
&ht LCTRL A       &kp S  &ht LEFT_ALT D  &ht LEFT_GUI F  &kp G         &kp H      &ht RIGHT_GUI J  &ht RIGHT_ALT K  &kp L    &lt 5 ENTER
&ht LEFT_SHIFT Z  &kp X  &kp C           &kp V           &kp B         &kp N      &kp M            &kp COMMA        &kp DOT  &ht RIGHT_SHIFT EXCLAMATION
                                         &lt 1 TAB       &kp LSHIFT    &kp SPACE  &lt 2 TAB
            >;
        };

        tri_layer {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &bt BT_SEL 0    &bt BT_SEL 2  &out OUT_TOG   &tog 3          &kp C_MUTE    &kp C_PREV
&kp F5  &kp F6   &kp F7   &kp F8   &bt BT_SEL 1    &bt BT_SEL 3  &kp C_BRI_UP   &studio_unlock  &kp C_VOL_UP  &kp C_PP
&kp F9  &kp F10  &kp F11  &kp F12  &bt BT_CLR      &bt BT_SEL 4  &kp C_BRI_DEC  &trans          &kp C_VOL_DN  &kp C_NEXT
                          &trans   &trans          &trans        &trans
            >;
        };

        mouse {
            bindings = <
&tog 5  &mkp MB4  &mkp MCLK  &mkp MB5   &trans        &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &tog 5
&trans  &trans    &trans     &trans     &trans        &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
&trans  &trans    &trans     &trans     &trans        &trans          &mkp MB4        &mkp MCLK     &mkp MB5         &trans
                             &kp SPACE  &kp LSHIFT    &mkp LCLK       &mkp RCLK
            >;
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans            &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp C_PLAY_PAUSE  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans            &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };
    };
};
